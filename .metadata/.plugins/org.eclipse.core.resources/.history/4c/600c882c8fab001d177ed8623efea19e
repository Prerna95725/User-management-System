package com.springboot.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import com.springboot.client.UserServiceClient;
import com.springboot.entity.AuthRequest;

import com.springboot.payloads.UserDto;
import com.springboot.utility.JwtUtil;


@CrossOrigin("*")
@RestController
@RequestMapping("/api/v1")
public class UserController {
	
	@Autowired
	private JwtUtil jwtUtil;
	//private JWTUtility jwtUtility;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	//@Autowired
	//private UserService userService;

	@Autowired
	UserServiceClient feignServiceUtil;
	
	@GetMapping("/users")
	public List<UserDto> getAllUser() {
		return feignServiceUtil.getAllUser();
	}
	
	
	@GetMapping("/users/{userId}")
	public UserDto getSingleUser(@PathVariable("userId") Integer uid) {
		 return feignServiceUtil.getUserById(uid); 
		 }
	 

	@PostMapping("/users")
	public UserDto createUser( @RequestBody UserDto userDto) {
		return feignServiceUtil.createUser(userDto);
	}
	
	
	@PutMapping("/users/{userId}")
	public UserDto updateUser( @RequestBody UserDto userDto, @PathVariable("userId") Integer uid)
	{
		return feignServiceUtil.updateUser(userDto,uid);
	}
	
	@DeleteMapping("/users/{userId}")
	public Object deleteUser(@PathVariable("userId") Integer uid) {
		return feignServiceUtil.deleteUser(uid);
	}
	@GetMapping("/home")
	public String home()
	{
		return "hello";
	}
	
	@PostMapping("/authenticate")
	public String generateToken(@RequestBody AuthRequest authRequest) throws Exception {
		try {
            authenticationManager.authenticate(
                    new UsernamePasswordAuthenticationToken(authRequest.getUserName(), authRequest.getPassword())
            );
        } catch (Exception ex) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND,"Invalid username and password");
        }
        return jwtUtil.generateToken(authRequest.getUserName());
	}
	
}
